package pages_DSD_OMS.userManagement;import helper.HelpersMethod;import io.cucumber.java.Scenario;import org.openqa.selenium.*;import org.openqa.selenium.interactions.Actions;import org.openqa.selenium.support.FindBy;import org.openqa.selenium.support.PageFactory;import org.openqa.selenium.support.ui.ExpectedConditions;import org.openqa.selenium.support.ui.WebDriverWait;import org.testng.Assert;import pages_DSD_OMS.orderEntry.OrderEntryPage;import util.RandomValues;import util.TestBase;import java.io.IOException;import java.util.List;import java.util.concurrent.TimeUnit;import pages_DSD_OMS.userManagement.UserManagementPage;public class ManageRegistrationPage {    static WebDriver driver;    Scenario scenario;    UserManagementPage user_management_page;    static boolean exists = false;    static String currentURL = null;    static String primary_Account_No = null;    String primary_Account_No_nonstatic = null;    @FindBy(xpath = "//div[@class='user-info-initial-container']")    private WebElement IconContainer;    //span[text()='Manage registrations']    @FindBy(xpath = "//span[text()='Manage registrations']")    private WebElement Manage_Registration;    @FindBy(xpath = "//label[contains(text(),'User')]/following-sibling::div/descendant::button")    private WebElement UsersearchIcon;    @FindBy(id = "PONumber")    private WebElement PO_No;    @FindBy(xpath = "//button[@id='updateUserInfo']")    private WebElement updateUserInfo;    @FindBy(xpath = "//label[contains(text(),'Customer account #')]/following-sibling::div/descendant::button")    private WebElement CustomerAccIndex;    @FindBy(id = "add-primary-account-part-1")    private static WebElement Acc1;    @FindBy(id = "add-primary-account-part-2")    private static WebElement Acc2;    @FindBy(id = "add-primary-account-part-3")    private static WebElement Acc3;    @FindBy(xpath = "//div[text()='Primary customer account']/..//button[contains(text(),'Delete')]")    WebElement Primary_Delete_Button;    @FindBy(xpath = "//button[text()='Yes']")    WebElement Confirm_Yes_Button;    @FindBy(xpath = "(//button[text()='Add'])[1]")    WebElement Primary_account_Add;    @FindBy(id = "recipient-email-address")    WebElement enter_Email;    @FindBy(id = "addEmailButton")    WebElement email_Add;    @FindBy(xpath = "//span[text()='Pending registrations']")    WebElement pending_registrations;    @FindBy(xpath = "//span[@id='userPendingRegistrationsField']")    WebElement user_pending_registrations_dropdown;    @FindBy(xpath = "//button[text()='Confirm']")    WebElement user_activation_Confirm_button;    @FindBy(xpath = "//button[text()='Deny']")    WebElement user_activation_deny_button;    @FindBy(xpath = "//button[text()='No']")    WebElement user_on_No_button;    @FindBy(xpath = "//button[text()='Cancel']")    WebElement user_on_Cancel_button_Manage_Registration;    String email = RandomValues.generateEmail(30);    public ManageRegistrationPage(WebDriver driver, Scenario scenario) {        this.scenario = scenario;        this.driver = driver;        PageFactory.initElements(driver, this);    }    public void ClickOn_Manage_Registration() {        try {            String status = HelpersMethod.returnDocumentStatus(driver);            if (status.equals("loading")) {                HelpersMethod.waitTillLoadingPage(driver);            }            if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                WebElement WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 400);            }            HelpersMethod.waitTillElementDisplayed(driver, Manage_Registration, 100);            if (HelpersMethod.EleDisplay(Manage_Registration)) {                HelpersMethod.ScrollElement(driver, Manage_Registration);                HelpersMethod.ClickBut(driver, Manage_Registration, 100);                if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                    //Karthik -it was present                    WebElement WebEle1 = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                    HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle1, 400);                }            }        } catch (Exception e) {        }    }    public void clickOn_UsersearchIcon() {        HelpersMethod.clickOn(driver, UsersearchIcon, 10);    }    public void SelectUser_UserIndexPopup() throws InterruptedException {        exists = false;        //select user in the row in the user table        WebElement WebEle;        //radio button contains write text here        WebElement Search2;        //String AccNo = TestBase.testEnvironment.get_Account();        String User_name = "a";        String status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        new WebDriverWait(driver, 40).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]")));        WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        // code to click on Addfilter button -timeout:800        WebElement AddFilterButton = modalContainer.findElement(By.xpath(".//button/descendant::span[contains(text(),'Add filter')]"));        HelpersMethod.ActClick(driver, AddFilterButton, 100);        //Identify the dialog popup  -timeout:1500        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]", 100);        HelpersMethod.waitTillElementLocatedDisplayed(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]", 600);        WebElement modalContainer1 = HelpersMethod.FindByElement(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]");        //Validate child popup        WebElement childTitle = modalContainer1.findElement(By.xpath(".//div[contains(@class,'i-filter-popup__checkboxes')]/h1[text()='Basic']"));        HelpersMethod.JScriptClick(driver, childTitle, 400);        Assert.assertEquals(childTitle.getText(), "Basic", "Add Filter Opened is validated");        //search box in 'Add filter' dropdown        WebElement Search1 = modalContainer1.findElement(By.xpath("//input[@autocomplete='off' and @placeholder='Search']"));        HelpersMethod.EnterText(driver, Search1, 800, "User name");        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Click on Check box -Javascript        HelpersMethod.WaitElementPresent(driver, "xpath", "//input[@type='checkbox']/../label/span/span/../../../input", 400);        new WebDriverWait(driver, 200).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='checkbox']/../label/span/span/../../../input")));        WebElement WebEle1 = modalContainer1.findElement(By.xpath(".//input[@type='checkbox']/../label/span/span/../../../input"));        HelpersMethod.JScriptClick(driver, WebEle1, 400);        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Identify radio button and click on Radio button        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]", 400);        HelpersMethod.waitTillElementLocatedDisplayed(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]", 200);        WebElement RadioPop = HelpersMethod.FindByElement(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]");        //karthik        WebElement radioButton = RadioPop.findElement(By.xpath(".//div[contains(@class,'i-btn-radio filter-radio')][1]/following-sibling::div[contains(@class,'k-textbox-container i-filter-popup__content__input')]/input"));//        if (radioButton.isDisplayed())//        {        //radio button "contains" write text here        //Search2 = RadioPop.findElement(By.xpath(".//div[contains(@class,'i-btn-radio filter-radio')][1]/following-sibling::div[contains(@class,'k-textbox-container i-filter-popup__content__input')]/input"));        //HelpersMethod.JScriptClick(driver, radioButton, 400);        HelpersMethod.EnterText(driver, radioButton, 200, User_name);        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Click on Apply button        WebElement ApplyButton = RadioPop.findElement(By.xpath(".//button[text()='Apply']"));        new WebDriverWait(driver, 40).until(ExpectedConditions.elementToBeClickable(ApplyButton));        HelpersMethod.ClickBut(driver, ApplyButton, 40);        //}        if (HelpersMethod.IsExists("//div[contains(@class,'k-widget k-window k-dialog')]/descendant::div[@class='i-no-data']", driver)) {            scenario.log("USER NAME AND ITS DETAILS DON'T EXIST");        } else {            WebEle = modalContainer.findElement(By.xpath(".//tr[contains(@class,'k-master-row')]"));            HelpersMethod.ScrollElement(driver, WebEle);            HelpersMethod.ActClick(driver, WebEle, 40);            if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 800);            }            exists = true;            scenario.log("Details of the selected User have been retrieved here");        }    }    //select sales representative user for the particular customer account -without 'Add Filter' option    public void SelectUser_UserIndexPopup_without_Add_Filter() throws InterruptedException {        exists = false;        //select user in the row in the user table        WebElement WebEle;        //radio button contains write text here        WebElement Search2;        //Karthik Apr-3//        String status = HelpersMethod.returnDocumentStatus(driver);//        if (status.equals("loading")) {//            HelpersMethod.waitTillLoadingPage(driver);//        }        new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]")));        WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));        String status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        if (HelpersMethod.IsExists("//div[contains(@class,'k-widget k-window k-dialog')]/descendant::div[@class='i-no-data']", driver)) {            scenario.log("USER NAME AND ITS DETAILS DON'T EXIST");        } else {            WebEle = modalContainer.findElement(By.xpath(".//tr[contains(@class,'k-master-row')]"));            HelpersMethod.ScrollElement(driver, WebEle);            HelpersMethod.ActClick(driver, WebEle, 40);            if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 800);            }            exists = true;            scenario.log("Details of the selected User have been retrieved here");        }    }    public void EnterPO_No(String PO_Num) throws InterruptedException {        WebElement WebEle = null;        exists = false;        // Apr-3 karthik//        String status = HelpersMethod.returnDocumentStatus(driver);//        if (status.equals("loading")) {//            HelpersMethod.waitTillLoadingPage(driver);//        }//        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {//            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");//            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);//        }        new WebDriverWait(driver, 100).until(ExpectedConditions.textToBePresentInElementLocated(By.id("PONumber-label"), "PO #"));        if (PO_No.isDisplayed()) {            HelpersMethod.ScrollElement(driver, PO_No);            HelpersMethod.ActClearKey(driver, PO_No, 10);            HelpersMethod.ActSendKey(driver, PO_No, 10, PO_Num);            scenario.log("PO# ENTERED IS " + PO_Num);            exists = true;        }        Assert.assertEquals(exists, true);    }    public void update_UserInfo() throws InterruptedException {        HelpersMethod.clickOn(driver, updateUserInfo, 40);    }    public void Click_CustomerAccountIndex() {        exists = false;        HelpersMethod.Implicitwait(driver, 40);        try {            HelpersMethod.ClickBut(driver, CustomerAccIndex, 100);            exists = true;            Assert.assertEquals(exists, true);        } catch (Exception e) {        }    }    public void ValidateCustomerAccountPopup() {        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[contains(@class,'k-widget k-window k-dialog')]", 600);        HelpersMethod.waitTillElementLocatedDisplayed(driver, "xpath", "//div[contains(@class,'k-widget k-window k-dialog')]", 600);        // to fetch the web element of the modal container        WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));        // to fetch the web elements of the modal content and interact with them, code to fetch content of modal title and verify it        WebElement modalContentTitle = modalContainer.findElement(By.xpath(".//div[contains(@class,'k-window-title k-dialog-title')]"));        Assert.assertEquals(modalContentTitle.getText(), "Customer account index", "Verify Title message");    }    public String SelectCustomerAccount_Manage_Registration() throws InterruptedException {        exists = false;        WebElement WebEle;        WebElement Search2;        //String AccNo = TestBase.testEnvironment.get_Account();        try {            String status = HelpersMethod.returnDocumentStatus(driver);            if (status.equals("loading")) {                HelpersMethod.waitTillLoadingPage(driver);            }            new WebDriverWait(driver, 200).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]")));            WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));            status = HelpersMethod.returnDocumentStatus(driver);            if (status.equals("loading")) {                HelpersMethod.waitTillLoadingPage(driver);            }            if (HelpersMethod.IsExists("//div[contains(@class,'k-widget k-window k-dialog')]/descendant::div[@class='i-no-data']", driver)) {                scenario.log("CUSTOMER ACCOUNT NUMBER DOESN'T EXISTS");            } else {                //xpath to select customer number and name in a modal container                WebEle = modalContainer.findElement(By.xpath("(.//tr[contains(@class,'k-master-row')])[2]/td[1]"));                primary_Account_No = WebEle.getText();                System.out.println("elephant-2   " + primary_Account_No);                WebEle = modalContainer.findElement(By.xpath("(.//tr[contains(@class,'k-master-row')])[2]"));                HelpersMethod.ScrollElement(driver, WebEle);                HelpersMethod.clickOn(driver, WebEle, 40);                if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                    WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                    HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);                }                scenario.log("CUSTOMER ACCOUNT NUMBER HAS BEEN SELECTED");            }        } catch (Exception e) {        } finally {            scenario.log("CUSTOMER ACCOUNT NUMBER " + primary_Account_No);            return primary_Account_No;        }    }    public void SelectCustomerAccount_Manage_Registration_Add_Filter() throws InterruptedException {        exists = false;        //select user in the row in the user table        WebElement WebEle;        //radio button contains write text here        WebElement Search2;        //String AccNo = TestBase.testEnvironment.get_Account();        //String User_name = "a";//        UserManagementPage userManagementPage=new UserManagementPage(driver,scenario);//        String str_random= userManagementPage.get_the_UserName();        String customer_account_number = TestBase.testEnvironment.FullAcc();        String status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        new WebDriverWait(driver, 40).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]")));        //WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));        //        WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        // code to click on Addfilter button -timeout:800        WebElement AddFilterButton = modalContainer.findElement(By.xpath(".//button/descendant::span[contains(text(),'Add filter')]"));        HelpersMethod.ActClick(driver, AddFilterButton, 100);        //Identify the dialog popup  -timeout:1500        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]", 100);        HelpersMethod.waitTillElementLocatedDisplayed(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]", 600);        WebElement modalContainer1 = HelpersMethod.FindByElement(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]");        //Validate child popup        WebElement childTitle = modalContainer1.findElement(By.xpath(".//div[contains(@class,'i-filter-popup__checkboxes')]/h1[text()='Basic']"));        HelpersMethod.JScriptClick(driver, childTitle, 400);        Assert.assertEquals(childTitle.getText(), "Basic", "Add Filter Opened is validated");        //search box in 'Add filter' dropdown        WebElement Search1 = modalContainer1.findElement(By.xpath("(//input[@autocomplete='off' and @placeholder='Search'])[2]"));        HelpersMethod.EnterText(driver, Search1, 800, "Customer account #");        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Click on Check box -Javascript        HelpersMethod.WaitElementPresent(driver, "xpath", "//input[@type='checkbox']/../label/span/span/../../../input", 400);        new WebDriverWait(driver, 200).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='checkbox']/../label/span/span/../../../input")));        WebElement WebEle1 = modalContainer1.findElement(By.xpath(".//input[@type='checkbox']/../label/span/span/../../../input"));        HelpersMethod.JScriptClick(driver, WebEle1, 400);        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Identify radio button and click on Radio button        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]", 400);        HelpersMethod.waitTillElementLocatedDisplayed(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]", 200);        WebElement RadioPop = HelpersMethod.FindByElement(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]");        //karthik        //Apr-4        WebElement radioButton = RadioPop.findElement(By.xpath(".//div[contains(@class,'i-btn-radio filter-radio')][1]/following-sibling::div[contains(@class,'k-textbox-container i-filter-popup__content__input')]/input"));//        if (radioButton.isDisplayed())//        {        //radio button "contains" write text here        //Search2 = RadioPop.findElement(By.xpath(".//div[contains(@class,'i-btn-radio filter-radio')][1]/following-sibling::div[contains(@class,'k-textbox-container i-filter-popup__content__input')]/input"));        //HelpersMethod.JScriptClick(driver, radioButton, 400);        HelpersMethod.EnterText(driver, radioButton, 200, customer_account_number);        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Click on Apply button        WebElement ApplyButton = RadioPop.findElement(By.xpath(".//button[text()='Apply']"));        new WebDriverWait(driver, 40).until(ExpectedConditions.elementToBeClickable(ApplyButton));        HelpersMethod.ClickBut(driver, ApplyButton, 40);        //}        if (HelpersMethod.IsExists("//div[contains(@class,'k-widget k-window k-dialog')]/descendant::div[@class='i-no-data']", driver)) {            scenario.log("USER NAME AND ITS DETAILS DON'T EXIST");        } else {            WebEle = modalContainer.findElement(By.xpath(".//tr[contains(@class,'k-master-row')]"));            HelpersMethod.ScrollElement(driver, WebEle);            HelpersMethod.ActClick(driver, WebEle, 40);            if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 800);            }            exists = true;            scenario.log("Customer account has been selected");        }    }    public void Delete_Primary_Account_Details() throws InterruptedException {        WebElement WebEle;        try {            if (HelpersMethod.EleDisplay(Primary_Delete_Button)) {                //it fetches primary Account                HelpersMethod.clickOn(driver, Primary_Delete_Button, 40);                HelpersMethod.clickOn(driver, Confirm_Yes_Button, 40);                if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                    WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                    HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);                }                scenario.log("PRIMARY ACCOUNT NUMBER HAS BEEN DELETED");            }        } catch (Exception e) {        }    }    public static String User_fetches_the_customer_account_from_the_index_table() {        WebElement WebEle;        WebElement Primary_account_no;        try {            if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);            }            if (HelpersMethod.EleDisplay(Acc3)) {                //it fetches primary Account                WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));                Primary_account_no = modalContainer.findElement(By.xpath("(.//tr[contains(@class,'k-master-row')])[2]/td[1]"));                primary_Account_No = Primary_account_no.getText();            }        } catch (Exception e) {        } finally {            System.out.println("Finally value is now elephant" + primary_Account_No);            return primary_Account_No; // value is being returned inside finally        }    }    public static void Enter_Primary_Account_No() {        WebElement WebEle;        String Account_No = null;        WebElement Primary_account_no;        try {            exists = true;            if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);            }            String status = HelpersMethod.returnDocumentStatus(driver);            if (status.equals("loading")) {                HelpersMethod.waitTillLoadingPage(driver);            }            String enter_Primary_Account_No = TestBase.testEnvironment.FullAcc();            //String primary_Account_No = User_fetches_the_customer_account_from_the_index_table();            // String[] accArray = primary_Account_No.split("-");            String[] accArray = enter_Primary_Account_No.split("-");            //Enter the Customer Account#            HelpersMethod.EnterText(driver, Acc1, 1, accArray[0]);            HelpersMethod.EnterText(driver, Acc2, 1, accArray[1]);            HelpersMethod.EnterText(driver, Acc3, 1, accArray[2]);        } catch (Exception e) {        }    }    public void User_Adds_Primary_Account() throws InterruptedException, IOException {        WebElement WebEle;        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);        }        HelpersMethod.clickOn(driver, Primary_account_Add, 40);    }    public void Select_sales_rep_User_IndexPopup_with_AddFilter() throws InterruptedException {        exists = false;        //select user in the row in the user table        WebElement WebEle;        //radio button contains write text here        WebElement Search2;        //String AccNo = TestBase.testEnvironment.get_Account();        //String User_name = "a";//        UserManagementPage userManagementPage=new UserManagementPage(driver,scenario);//        String str_random= userManagementPage.get_the_UserName();        //changed apr-11        UserManagementPage user_Management_Page = new UserManagementPage(driver, scenario);        String User_name = user_Management_Page.EnterUserName().toString();        System.out.println("---------------WATER++++----------------- " + User_name);        String status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        new WebDriverWait(driver, 40).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]")));        //WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));        //        WebElement modalContainer = driver.findElement(By.xpath("//div[contains(@class,'k-widget k-window k-dialog')]"));        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        // code to click on Addfilter button -timeout:800        WebElement AddFilterButton = modalContainer.findElement(By.xpath(".//button/descendant::span[contains(text(),'Add filter')]"));        HelpersMethod.ActClick(driver, AddFilterButton, 100);        //Identify the dialog popup  -timeout:1500        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]", 100);        HelpersMethod.waitTillElementLocatedDisplayed(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]", 600);        WebElement modalContainer1 = HelpersMethod.FindByElement(driver, "xpath", "//div[contains(@class,'k-popup k-child-animation-container k-slide-down-enter k-slide-down-enter-active')]");        //Validate child popup        WebElement childTitle = modalContainer1.findElement(By.xpath(".//div[contains(@class,'i-filter-popup__checkboxes')]/h1[text()='Basic']"));        HelpersMethod.JScriptClick(driver, childTitle, 400);        Assert.assertEquals(childTitle.getText(), "Basic", "Add Filter Opened is validated");        //search box in 'Add filter' dropdown        WebElement Search1 = modalContainer1.findElement(By.xpath("//input[@autocomplete='off' and @placeholder='Search']"));        HelpersMethod.EnterText(driver, Search1, 800, "User name");        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Click on Check box -Javascript        HelpersMethod.WaitElementPresent(driver, "xpath", "//input[@type='checkbox']/../label/span/span/../../../input", 400);        new WebDriverWait(driver, 200).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='checkbox']/../label/span/span/../../../input")));        WebElement WebEle1 = modalContainer1.findElement(By.xpath(".//input[@type='checkbox']/../label/span/span/../../../input"));        HelpersMethod.JScriptClick(driver, WebEle1, 400);        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Identify radio button and click on Radio button        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]", 400);        HelpersMethod.waitTillElementLocatedDisplayed(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]", 200);        WebElement RadioPop = HelpersMethod.FindByElement(driver, "xpath", "//div[contains(@class,'k-child-animation-container')]/descendant::form[contains(@class,'i-filter-popup')]");        //karthik        //Apr-4        WebElement radioButton = RadioPop.findElement(By.xpath(".//div[contains(@class,'i-btn-radio filter-radio')][1]/following-sibling::div[contains(@class,'k-textbox-container i-filter-popup__content__input')]/input"));//        if (radioButton.isDisplayed())//        {        //radio button "contains" write text here        //Search2 = RadioPop.findElement(By.xpath(".//div[contains(@class,'i-btn-radio filter-radio')][1]/following-sibling::div[contains(@class,'k-textbox-container i-filter-popup__content__input')]/input"));        //HelpersMethod.JScriptClick(driver, radioButton, 400);        HelpersMethod.EnterText(driver, radioButton, 200, User_name);        status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        //Click on Apply button        WebElement ApplyButton = RadioPop.findElement(By.xpath(".//button[text()='Apply']"));        new WebDriverWait(driver, 40).until(ExpectedConditions.elementToBeClickable(ApplyButton));        HelpersMethod.ClickBut(driver, ApplyButton, 40);        //}        if (HelpersMethod.IsExists("//div[contains(@class,'k-widget k-window k-dialog')]/descendant::div[@class='i-no-data']", driver)) {            scenario.log("USER NAME AND ITS DETAILS DON'T EXIST");        } else {            WebEle = modalContainer.findElement(By.xpath(".//tr[contains(@class,'k-master-row')]"));            HelpersMethod.ScrollElement(driver, WebEle);            HelpersMethod.ActClick(driver, WebEle, 40);            if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {                WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");                HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 800);            }            exists = true;            scenario.log("Details of the selected User have been retrieved here");        }    }    public void enterEmail() {        exists = false;        try {            HelpersMethod.waitTillElementDisplayed(driver, enter_Email, 2);            if (HelpersMethod.EleDisplay(enter_Email)) {                HelpersMethod.ScrollElement(driver, enter_Email);                HelpersMethod.EnterText(driver, enter_Email, 2, email);                exists = true;                scenario.log("ENTERED EMAIL IS " + HelpersMethod.JSGetValueEle(driver, enter_Email, 10));            }        } catch (Exception e) {        }    }    public void User_Adds_emailID() throws InterruptedException, IOException {        WebElement WebEle;        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);        }        HelpersMethod.clickOn(driver, email_Add, 40);    }    public void click_Pending_registrations() {        WebElement WebEle;        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);        }        //click_Pending_registrations        HelpersMethod.clickOn(driver, pending_registrations, 40);        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);        }        String status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }    }    public void find_and_select_User_pending_registration() throws InterruptedException {        exists = false;        WebElement WebEle;        Actions act1 = new Actions(driver);        //String subcategories = null;        String pending_Username = null;        String brand = null;        int i = 0;        String status = HelpersMethod.returnDocumentStatus(driver);        if (status.equals("loading")) {            HelpersMethod.waitTillLoadingPage(driver);        }        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 1000);        }        //comment-Select Sub-categories        //comment-HelpersMethod.WaitElementPresent(driver,"id","productsCard",600);        HelpersMethod.ScrollElement(driver, user_pending_registrations_dropdown);        HelpersMethod.ActClick(driver, user_pending_registrations_dropdown, 600);        HelpersMethod.WaitElementPresent(driver, "xpath", "//div[@class='k-animation-container k-animation-container-relative k-list-container k-reset i-common-dropdown i-common-dropdown__type-none k-animation-container-shown']", 200);        WebElement modalContainer1 = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='k-animation-container k-animation-container-relative k-list-container k-reset i-common-dropdown i-common-dropdown__type-none k-animation-container-shown']");        List<WebElement> subCats = modalContainer1.findElements(By.xpath(".//ul/li"));        for (WebElement subCat : subCats) {            i++;            act1.moveToElement(subCat).build().perform();            if (i == 2) {                pending_Username = subCat.getText();                act1.moveToElement(subCat).build().perform();                act1.click(subCat).build().perform();                scenario.log("This User is listed in pending Registration page-waiting for denial or approval  " + pending_Username);                break;            }        }    }    public void confirm_the_activation()    {        WebElement WebEle;        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);            HelpersMethod.clickOn(driver,user_activation_Confirm_button,10);            HelpersMethod.clickOn(driver,user_on_No_button,10);        }    }    public void Deny_the_activation()    {        WebElement WebEle;        if (HelpersMethod.IsExists("//div[@class='loader']", driver)) {            WebEle = HelpersMethod.FindByElement(driver, "xpath", "//div[@class='loader']");            HelpersMethod.waitTillLoadingWheelDisappears(driver, WebEle, 100);            HelpersMethod.clickOn(driver,user_activation_Confirm_button,10);            HelpersMethod.clickOn(driver,user_on_No_button,10);        }    }    public void user_cancels_the_manage_registration_page()    {        if(user_on_Cancel_button_Manage_Registration.isEnabled())        {            HelpersMethod.clickOn(driver,user_on_Cancel_button_Manage_Registration,10);        }        else {        }        }    }